service: sls

custom:
  settings:
    POSTS_TABLE: webRTC
  # local dynamodb dev 
  serverless-offline:
    httpPort: 3000
    lambdaPort: 3002
    endpoint: http://localhost:3002
  dynamodb:
    stages:
      - dev
    start:
      port: 3002
      inMemory: true
      migrate: true

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  profile: iamadmin
  environment: ${self:custom.settings}
  iam:
    role:
      statements:
      - Effect: "Allow"
        Action:
            - dynamodb:DescribeTable
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
        Resource:
          - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.POSTS_TABLE}"

functions:
  createPost:
    handler: handler.createPost
    events:
    - http:
        path: /post
        method: post
  # getAllPosts:
  #   handler: handler.getAllPosts
  #   events:
  #   - http:
  #       path: /posts
  #       method: get
  getPost:
    handler: handler.getPost
    events:
    - http:
        path: /post/{id}
        method: get
  test:
    handler: handler.test
    events:
    - http:
        path: /post/test
        method: post

resources:
  Resources:
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.POSTS_TABLE}-table



plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline